<?phpnamespace App\FrontModule\Components\Faktury;use Nette;use Ublaboo\DataGrid\DataGrid;use Ublaboo\DataGrid\Localization\SimpleTranslator;use DbTable;/** * Komponenta pre zobrazenie casti faktur pre FRONT modul * Posledna zmena(last change): 04.05.2017 * * @author Ing. Peter VOJTECH ml <petak23@gmail.com> * @copyright Copyright (c) 2012 - 2017 Ing. Peter VOJTECH ml. * @license * @link http://petak23.echo-msz.eu * @version 1.0.1 * */class ViewFakturyControl extends Nette\Application\UI\Control {  /** @var DbTable\Faktury */  private $faktury;    /** @var DokumentFormFactory */	public $dokumentFormFactory;    private $skupina;  private $zmluvy = FALSE;  private $user;  private $id_dokument = 0;  public function __construct(DbTable\Faktury $faktury, DokumentFormFactory $dokumentFormFactory, Nette\Security\User $user) {    parent::__construct();    $this->faktury = $faktury;    $this->dokumentFormFactory = $dokumentFormFactory;    $this->user = $user;  }    /**   * Nastavenie skupiny   * @param int $skupina   */  public function setSkupina($skupina) {    $this->skupina = $skupina;    if ($this->skupina == 25) { $this->zmluvy = TRUE;}  }    /**    * Render    * @see Nette\Application\Control#render() */  public function render() {     $toIdDocument = explode("=", $this->presenter->httpRequest->getUrl()->query);    if (isset($toIdDocument[1]) && $toIdDocument[0] == 'viewFaktury-id_dokument') {      $this->id_dokument = $toIdDocument[1];      $this->template->id_dokument = $this->id_dokument;      $this["dokumentForm"]->setDefaults($this->faktury->find($this->id_dokument));    }    $this->template->setFile(__DIR__ . '/ViewFaktury.latte');    $this->template->skupina = $this->skupina;    $this->template->id_dokument = $this->id_dokument;    $this->template->render();  }    public function createComponentFakturyGrid($name) {		$grid = new DataGrid($this, $name);		$grid->setDataSource($this->faktury->findBy(['id_hlavne_menu'=>  $this->skupina])->order('datum_vystavenia DESC'));		$grid->addColumnText('cislo', 'Číslo');    $grid->addColumnText('subjekt', $this->zmluvy ? "Zmluvná strana" : "Dodávateľ");    if ($this->zmluvy) { $grid->addColumnText('nazov', 'Názov');}    $grid->addColumnText('predmet', 'Predmet');    $grid->addColumnNumber('cena', $this->zmluvy ? "Cena vrátane DPH" : "Suma")->setFormat(2,',','');    $grid->addColumnDateTime('datum_vystavenia', $this->zmluvy ? "Dátum uzatvorenia zmluvy" : "Dátum vystavenia");    if ($this->zmluvy) { $grid->addColumnDateTime('datum_ukoncenia', 'Dátum ukončenia zmluvy');}    $grid->addColumnLink('subor', 'Detail', 'dokumentOpen', 'subor', ['subor'])->setOpenInNewTab();    if (FALSE && $this->user->isAllowed('Front:Faktury', 'add')) {      $grid->addAction('id', 'Edit', 'Edit')->setIcon('pencil');    }    /** Localization */   $translator = new SimpleTranslator([     'ublaboo_datagrid.no_item_found_reset' => 'Žiadné položky neboli nájdené. Filter môžete vynulovať...',     'ublaboo_datagrid.no_item_found' => 'Žiadné položky neboli nájdené.',     'ublaboo_datagrid.here' => 'tu',     'ublaboo_datagrid.items' => 'Položky',     'ublaboo_datagrid.all' => 'všetky',     'ublaboo_datagrid.from' => 'z',     'ublaboo_datagrid.reset_filter' => 'Resetovať filter',     'ublaboo_datagrid.group_actions' => 'Hromadné akcie',     'ublaboo_datagrid.show_all_columns' => 'Zobraziť všetky stĺpce',     'ublaboo_datagrid.hide_column' => 'Skryť stĺpec',     'ublaboo_datagrid.action' => 'Akcia',     'ublaboo_datagrid.previous' => 'Predošlá',     'ublaboo_datagrid.next' => 'Daľšia',     'ublaboo_datagrid.choose' => 'Vyberte',     'ublaboo_datagrid.execute' => 'Vykonať',   ]);   $grid->setTranslator($translator);	}    public function handleDokumentOpen($subor) {    $this->presenter->redirectUrl("http://".$this->presenter->nazov_stranky."/www/files/dokumenty/".$subor);		exit;  }    public function handleEdit($id) {//    if ($this->presenter->isAjax()) {//      $this->redrawControl('myModalAddFaktura');//      $this['actionsGrid']->reload();//    } else {      $this->redirect('this', ['id_dokument'=>$id]);//    }  }  /**    * @param Nette\Application\UI\Form $form   * @return Nette\Application\UI\Form */  protected function _formMessage($form) {    $form['uloz']->onClick[] = function ($button) {       if (!count($button->getForm()->errors)) {$this->id_dokument = 0;}      $this->presenter->flashOut(!count($button->getForm()->errors), 'this', 'Zmena bola úspešne uložená!', 'Došlo k chybe a zmena sa neuložila. Skúste neskôr znovu...');		};    return $this->presenter->_vzhladForm($form);  }    /**    * Komponenta formulara pre pridanie a editaciu dokumentu.   * @return Nette\Application\UI\Form */  public function createComponentDokumentForm() {    return $this->_formMessage($this->dokumentFormFactory->create($this->skupina, $this->user->getId(), $this->presenter->upload_size ,$this->presenter->context->parameters["wwwDir"]));  }}interface IViewFakturyControl {  /** @return ViewFakturyControl */  function create();}